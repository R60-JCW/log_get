---
- hosts: all
  gather_facts: false
  tasks:
    - name: dable start check  # 2重起動防止シェルの確認
      shell: "sh dable_start_check.sh"
      delegate_to: localhost
      run_once: true
#      async: 5
#      poll: 0

    - name: execute lock playbook sh  # 2重起動防止シェルの実行
      shell: "sh lock_playbook.sh"
      delegate_to: localhost
      async: 1
      poll: 0
      run_once: true

    - name: create time      # ログ保存日時ディレクトリ作成
      set_fact:
        exe_date: "{{ lookup('pipe', 'date +%Y%m%d_%H%M_%S') }}"
      run_once: true

    - name: create parent directory
      set_fact:
        logdir_date: "{{ inventory_dir }}/log/log_{{ exe_date }}"
        #logdir_date: "./log/log_{{ lookup('pipe', 'date +%Y%m%d_%H%M_%S') }}"
      run_once: true
  
    - name: create directory for log      # ログ保存用実行日時別ディレクトリ作成
      file:
        path: "{{ logdir_date }}/"
        state: directory
      register: logdir
#      become: yes
      delegate_to: localhost
      run_once: true

    - name: create directory for repository   # リポジトリ保存用ディレクトリ作成
      file:
        path: "{{ inventory_dir }}/{{ repository_dir }}/"
        state: directory
      register: repodir
#      become: yes
      delegate_to: localhost
      run_once: true

- name: IOS section
  hosts: IOS
  gather_facts: false
  roles:
    - { role: get_ios_command, when: "'IOS' in groups and inventory_hostname in groups['IOS']" }
    - { role: save_cisco_command_logdir, when: "'IOS' in groups and inventory_hostname in groups['IOS']" }
    - { role: save_cisco_command_repodir, when: "'IOS' in groups and inventory_hostname in groups['IOS']" }
    - { role: process_text, when: "'IOS' in groups and inventory_hostname in groups['IOS'] and 'process_file' is defined" }

#- name: XR section
#  hosts: XR 
#  gather_facts: false
#  roles:
#    - { role: get_iosxr_command, when: "'XR' in groups and inventory_hostname in groups['XR']" }  
#    - { role: save_cisco_command_logdir, when: "'XR' in groups and inventory_hostname in groups['XR']" }  
#    - { role: save_cisco_command_repodir, when: "'IOS' in groups and inventory_hostname in groups['IOS']" }

#- name: XE section
#  hosts: XE 
#  gather_facts: false
#  roles:
#    - { role: get_ios_command, when: "'XE' in groups and inventory_hostname in groups['XE']" }  
#    - { role: save_cisco_command_logdir, when: "'XE' in groups and inventory_hostname in groups['XE']" }  
#    - { role: save_cisco_command_repodir, when: "'XE' in groups and inventory_hostname in groups['XE']" }  

#- name: NXOS section
#  hosts: NXOS 
#  gather_facts: false
#  roles:
#    - { role: get_nxos_command, when: "'NXOS' in groups and inventory_hostname in groups['NXOS']" }  
#    - { role: save_cisco_command_logdir, when: "'NXOS' in groups and inventory_hostname in groups['NXOS']" }  
#    - { role: save_cisco_command_repodir, when: "'NXOS' in groups and inventory_hostname in groups['NXOS']" }  

  post_tasks:
    - name: git
      shell: "sh git_and_notify.sh {{ trigger }} {{ exe_date }} {{ repository_dir }}"
      args:
        #chdir: "{{ inventory_dir }}"
      delegate_to: localhost
      run_once: true
    
    - name: finish dable start check shell  # 2重起動防止シェルの終了
      shell: "sh finish_dable_start.sh"
      delegate_to: localhost
      run_once: true
